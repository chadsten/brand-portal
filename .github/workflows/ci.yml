name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_ENV: test

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: brand_portal_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Lint
        run: npm run check

      - name: Run tests
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/brand_portal_test
          REDIS_URL: redis://localhost:6379/1
          AUTH_SECRET: test-secret
          GOOGLE_CLIENT_ID: test-google-id
          GOOGLE_CLIENT_SECRET: test-google-secret
          AZURE_AD_CLIENT_ID: test-azure-id
          AZURE_AD_CLIENT_SECRET: test-azure-secret
          AZURE_AD_TENANT_ID: test-tenant-id
          AWS_ACCESS_KEY_ID: test-access-key
          AWS_SECRET_ACCESS_KEY: test-secret-key
          AWS_REGION: us-east-1
          AWS_S3_BUCKET: test-bucket
          SMTP_HOST: test-smtp
          SMTP_PORT: "587"
          SMTP_USER: test-user
          SMTP_PASS: test-pass
          JWT_SECRET: test-jwt-secret
          NEXTAUTH_URL: http://localhost:3000
          NEXT_PUBLIC_APP_URL: http://localhost:3000

      - name: Build
        run: npm run build
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/brand_portal_test
          REDIS_URL: redis://localhost:6379/1
          AUTH_SECRET: test-secret
          GOOGLE_CLIENT_ID: test-google-id
          GOOGLE_CLIENT_SECRET: test-google-secret
          AZURE_AD_CLIENT_ID: test-azure-id
          AZURE_AD_CLIENT_SECRET: test-azure-secret
          AZURE_AD_TENANT_ID: test-tenant-id
          AWS_ACCESS_KEY_ID: test-access-key
          AWS_SECRET_ACCESS_KEY: test-secret-key
          AWS_REGION: us-east-1
          AWS_S3_BUCKET: test-bucket
          SMTP_HOST: test-smtp
          SMTP_PORT: "587"
          SMTP_USER: test-user
          SMTP_PASS: test-pass
          JWT_SECRET: test-jwt-secret
          NEXTAUTH_URL: http://localhost:3000
          NEXT_PUBLIC_APP_URL: http://localhost:3000

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for vulnerabilities
        run: npm audit --production
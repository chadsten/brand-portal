{
  "permissions": {
    "allow": [
      "Bash(npm run:*)",
      "Bash(npm install:*)",
      "Bash(touch:*)",
      "Bash(npx biome check:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(mkdir:*)",
      "Bash(npm test)",
      "Bash(mv:*)",
      "Bash(npm test:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(docker-compose:*)",
      "Bash(npm uninstall:*)",
      "Bash(ls:*)",
      "Bash(pkill:*)",
      "Bash(npx tsc:*)",
      "Bash(true)",
      "Bash(wmic:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(timeout 60 npm run build)",
      "Bash(curl:*)",
      "Bash(npm start)",
      "Bash(cp:*)",
      "WebFetch(domain:localhost)",
      "Bash(taskkill:*)",
      "Bash(tasklist:*)",
      "Bash(cmd //c:*)",
      "Bash(powershell:*)",
      "Bash(TASKKILL /F /PID 4248)",
      "Bash(cmd.exe:*)",
      "Bash(rm:*)",
      "Bash(find:*)",
      "Bash(SKIP_ENV_VALIDATION=true npm run db:seed)",
      "Bash(cd:*)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:password@localhost:5432/react-js-brand-portal\" npx tsx src/server/db/seed.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:password@localhost:5432/brand_portal\" npx tsx src/server/db/seed.ts)",
      "Bash(docker exec:*)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx src/server/db/seed.ts)",
      "Bash(cmd /c:*)",
      "Bash(pg_isready:*)",
      "Bash(psql:*)",
      "Bash(docker:*)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx check-assets.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx test-storage.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx upload-sample-assets.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx test-image-filter.ts)",
      "Bash(SKIP_ENV_VALIDATION=true npx tsx test-asset-upload.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx check-image-assets.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx test-specific-download.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx -e \"\nimport { db } from ''./src/server/db/index.js'';\nimport { assets } from ''./src/server/db/schema.js'';\nimport { desc } from ''drizzle-orm'';\n\nconst recentAssets = await db.select().from(assets).orderBy(desc(assets.createdAt)).limit(10);\nconsole.log(''Recent assets:'');\nrecentAssets.forEach(asset => {\n  console.log(\\`- ${asset.title}: ${(asset.fileSize / 1024).toFixed(1)} KB (${asset.mimeType})\\`);\n});\nprocess.exit(0);\n\")",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx check-recent-assets.ts)",
      "WebFetch(domain:file-examples.com)",
      "Bash(wget:*)",
      "Bash(python:*)",
      "Bash(node:*)",
      "Bash(yarn add:*)",
      "Bash(npx tsx:*)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx check-assets-count.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx check-detailed-assets.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx check-todays-assets.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx check-latest-seed.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx check-error-details.ts)",
      "Bash(SKIP_ENV_VALIDATION=true DATABASE_URL=\"postgresql://postgres:exotheterrible@localhost:5432/brand_portal\" npx tsx:*)",
      "Bash(sqlite3:*)",
      "Bash(npx ts-node:*)",
      "Bash(npx drizzle-kit:*)",
      "Bash(timeout:*)",
      "Bash(yarn install)",
      "Bash(yarn tsx:*)"
    ],
    "deny": []
  }
}
GOAL: Convert the AssetFilters.tsx component from HeroUI to DaisyUI components

IMPLEMENTATION: 
- Removed all @heroui/react imports (Autocomplete, AutocompleteItem, Button, Card, CardBody, CardHeader, Checkbox, CheckboxGroup, Chip, DateRangePicker, Divider, Input, Select, SelectItem, Slider)
- Converted Card/CardBody/CardHeader to div with DaisyUI card/card-body/card-title classes
- Converted Button components to native button elements with DaisyUI btn classes (btn-sm, btn-ghost, btn-outline)
- Converted Input components to native input elements with DaisyUI input/form-control/label structure
- Converted CheckboxGroup and Checkbox to native checkbox inputs with DaisyUI checkbox/form-control/label styling
- Converted Slider to native range input with DaisyUI range class (simplified to single value range)
- Converted Select/SelectItem to native select with option elements using DaisyUI select styling
- Converted Chip components to DaisyUI badge classes (badge-sm, badge-outline, badge-secondary, badge-success, badge-warning, badge-primary)
- Converted Divider to DaisyUI divider class
- Updated all event handlers from HeroUI conventions to standard React (onPress → onClick, onValueChange → onChange)
- Maintained all existing functionality including filter logic, state management, and API integration
- Preserved TypeScript types and interface definitions
- Added proper DaisyUI semantic styling and responsive layouts
- Implemented clearable functionality for search input and select dropdowns using X icon buttons

COMPLETED: 2025-07-28-21-21